# compiler: R8
# compiler_version: 3.3.83
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.0"}
# pg_map_id: 4fc2461
# pg_map_hash: SHA-256 4fc24618e3886373fd0dd9b11d2204bf814b6aa738e53ef1194f3af14b5afa04
com.newbee.ble_lib.NewBeeBleManager -> com.newbee.ble_lib.NewBeeBleManager:
    com.newbee.ble_lib.NewBeeBleManager bleManager -> b
    com.newbee.ble_lib.service.BluetoothGattServiceDao bluetoothGattServiceDao -> a
com.newbee.ble_lib.base.BaseService -> com.newbee.ble_lib.base.BaseService:
    android.os.IBinder baseBinder -> b
    java.lang.String tag -> a
    boolean isStart -> c
    com.newbee.ble_lib.base.BaseService$StatuListen statuListen -> d
    com.newbee.ble_lib.base.BaseService$StatuListen access$000(com.newbee.ble_lib.base.BaseService) -> a
    com.newbee.ble_lib.base.BaseService$StatuListen access$002(com.newbee.ble_lib.base.BaseService,com.newbee.ble_lib.base.BaseService$StatuListen) -> a
    void close() -> a
    void start(android.content.Intent,int,int) -> a
    boolean access$100(com.newbee.ble_lib.base.BaseService) -> b
    void init() -> b
com.newbee.ble_lib.base.BaseService$BaseServiceBinder -> com.newbee.ble_lib.base.BaseService$a:
    com.newbee.ble_lib.base.BaseService this$0 -> a
    com.newbee.ble_lib.base.BaseService getService() -> a
    void setStatuListen(com.newbee.ble_lib.base.BaseService$StatuListen) -> a
com.newbee.ble_lib.base.BaseService$StatuListen -> com.newbee.ble_lib.base.BaseService$b:
    void isStart() -> a
com.newbee.ble_lib.base.BaseServiceDao -> com.newbee.ble_lib.base.a:
    android.content.Context context -> b
    com.newbee.ble_lib.base.BaseService ss -> d
    java.lang.String tag -> a
    android.content.ServiceConnection sc -> c
    java.lang.String actionStr -> e
    com.newbee.ble_lib.base.BaseService access$002(com.newbee.ble_lib.base.BaseServiceDao,com.newbee.ble_lib.base.BaseService) -> a
    com.newbee.ble_lib.base.BaseService getService() -> a
    java.lang.Class getSsCls() -> b
    com.newbee.ble_lib.base.BaseService$StatuListen getStatuListen() -> c
    void startServiceIsBind() -> d
    void stopServiceIsBind() -> e
com.newbee.ble_lib.base.BaseServiceDao$1 -> com.newbee.ble_lib.base.a$a:
    com.newbee.ble_lib.base.BaseServiceDao this$0 -> a
com.newbee.ble_lib.manager.child.BleConnectManager -> a.a:
    com.newbee.ble_lib.manager.child.BleConnectManager bleManager -> d
    android.bluetooth.BluetoothAdapter bluetoothAdapter -> b
    android.bluetooth.BluetoothManager bluetoothManager -> a
    java.lang.String mBluetoothDeviceAddress -> c
    boolean bleIsOpen() -> a
    void close(android.content.Context) -> a
    boolean connect(android.content.Context,java.lang.String) -> a
    void havePermissionInitBle(android.content.Context,android.content.pm.PackageManager) -> a
    void disconnect() -> b
    com.newbee.ble_lib.manager.child.BleConnectManager getInstance() -> c
    void openBluetooth() -> d
    void startSearchBLE() -> e
com.newbee.ble_lib.manager.child.BlueToothGattManager -> a.b:
    android.bluetooth.BluetoothGattCharacteristic writeCharacteristic -> c
    long lastSendTime -> f
    boolean nowCanSend -> e
    java.lang.String tag -> a
    android.bluetooth.BluetoothGatt bluetoothGatt -> b
    com.newbee.ble_lib.manager.child.BlueToothGattManager blueToothGattManager -> g
    android.bluetooth.BluetoothGattCallback mGattCallback -> d
    java.lang.String access$000(com.newbee.ble_lib.manager.child.BlueToothGattManager) -> a
    android.bluetooth.BluetoothGattCharacteristic access$202(com.newbee.ble_lib.manager.child.BlueToothGattManager,android.bluetooth.BluetoothGattCharacteristic) -> a
    void close() -> a
    void initGatt(android.bluetooth.BluetoothDevice,android.content.Context) -> a
    void queSendCmd(byte[]) -> a
    void setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic,boolean) -> a
    android.bluetooth.BluetoothGatt access$100(com.newbee.ble_lib.manager.child.BlueToothGattManager) -> b
    void disconnect() -> b
    android.bluetooth.BluetoothGattCharacteristic access$200(com.newbee.ble_lib.manager.child.BlueToothGattManager) -> c
    com.newbee.ble_lib.manager.child.BlueToothGattManager getInstance() -> c
    boolean isNowCanSend() -> d
com.newbee.ble_lib.manager.child.BlueToothGattManager$1 -> a.b$a:
    com.newbee.ble_lib.manager.child.BlueToothGattManager this$0 -> a
    void displayGattServices() -> a
com.newbee.ble_lib.manager.image.BlueToothGattGetBitmapDataThread -> b.a:
    android.graphics.Bitmap bitmap -> b
    long startTime -> f
    int size -> j
    int w -> h
    com.newbee.ble_lib.manager.image.BlueToothGattGetBitmapDataThread$Listen listen -> a
    java.util.Queue dataInfoQueue -> d
    int h -> i
    boolean isStart -> e
    int index -> g
    com.nrmyw.ble_event_lib.type.BleSendBitmapQualityType qualityType -> c
    boolean isStart() -> a
    void sendImageEnd(long) -> a
    void splitPacketForMtuByte(byte[]) -> a
    void queToSend() -> b
    void sendImageStart() -> c
com.newbee.ble_lib.manager.image.BlueToothGattGetBitmapDataThread$Listen -> b.a$a:
    void sendOver(long) -> a
com.newbee.ble_lib.manager.image.BlueToothGattSendImageManager -> b.b:
    com.newbee.ble_lib.manager.image.BlueToothGattGetBitmapDataThread getBitmapDataThread -> a
    android.graphics.Bitmap lastBitmap -> c
    com.newbee.ble_lib.manager.image.BlueToothGattGetBitmapDataThread$Listen threadListen -> b
    com.newbee.ble_lib.manager.image.BlueToothGattSendImageManager sendImageManager -> e
    com.nrmyw.ble_event_lib.type.BleSendBitmapQualityType lastQualityType -> d
    com.newbee.ble_lib.manager.image.BlueToothGattGetBitmapDataThread access$000(com.newbee.ble_lib.manager.image.BlueToothGattSendImageManager) -> a
    com.newbee.ble_lib.manager.image.BlueToothGattGetBitmapDataThread access$002(com.newbee.ble_lib.manager.image.BlueToothGattSendImageManager,com.newbee.ble_lib.manager.image.BlueToothGattGetBitmapDataThread) -> a
    boolean checkNowSendImage() -> a
    void sendBitMap(android.graphics.Bitmap,com.nrmyw.ble_event_lib.type.BleSendBitmapQualityType) -> a
    void access$100(com.newbee.ble_lib.manager.image.BlueToothGattSendImageManager) -> b
    com.newbee.ble_lib.manager.image.BlueToothGattSendImageManager getInstance() -> b
    void queLast() -> c
    void queToSend() -> d
com.newbee.ble_lib.manager.image.BlueToothGattSendImageManager$1 -> b.b$a:
    com.newbee.ble_lib.manager.image.BlueToothGattSendImageManager this$0 -> a
    void sendOver(long) -> a
com.newbee.ble_lib.manager.msg.BlueToothGattMsgManager -> c.a:
    java.util.Map msgMq -> a
    java.util.Map imageMsgMq -> b
    com.newbee.ble_lib.manager.msg.BlueToothGattMsgManager$Listen listen -> c
    com.newbee.ble_lib.manager.msg.BlueToothGattMsgManager sendMsgManager -> d
    void addMsg(byte[]) -> a
    void addMsgByImage(int,byte[]) -> a
    java.lang.String getFristKStr() -> a
    void init(com.newbee.ble_lib.manager.msg.BlueToothGattMsgManager$Listen) -> a
    void listenSendMsg(java.lang.String,byte[]) -> a
    void removeImageMsg(java.lang.String) -> a
    int getImageFristK() -> b
    void listenSendImageMsg(int,byte[]) -> b
    void removeMsg(java.lang.String) -> b
    com.newbee.ble_lib.manager.msg.BlueToothGattMsgManager getInstance() -> c
    void queCmdMsg() -> d
    boolean queImageMsg() -> e
    void queMsg() -> f
com.newbee.ble_lib.manager.msg.BlueToothGattMsgManager$Listen -> c.a$a:
    void canSendImageMsg(int,byte[]) -> a
    void canSendMsg(java.lang.String,byte[]) -> a
com.newbee.ble_lib.manager.msg.BlueToothGattSendMsgManager -> c.b:
    com.newbee.ble_lib.manager.msg.BlueToothGattSendMsgManager blueToothGattSendManager -> b
    com.newbee.ble_lib.manager.msg.BlueToothGattMsgManager$Listen msgListen -> a
    void close() -> a
    void sendMsgByCmd(byte[]) -> a
    void sendMsgByImg(int,byte[]) -> a
    com.newbee.ble_lib.manager.msg.BlueToothGattSendMsgManager getInstance() -> b
    void setNowCanSend() -> c
com.newbee.ble_lib.manager.msg.BlueToothGattSendMsgManager$1 -> c.b$a:
    com.newbee.ble_lib.manager.msg.BlueToothGattSendMsgManager this$0 -> a
    void canSendImageMsg(int,byte[]) -> a
    void canSendMsg(java.lang.String,byte[]) -> a
com.newbee.ble_lib.receiver.BleStatuBroadcastReceiver -> com.newbee.ble_lib.receiver.BleStatuBroadcastReceiver:
    java.lang.String tag -> a
    void sendChangedStatu(int) -> a
com.newbee.ble_lib.receiver.BleStatuBroadcastReceiverDao -> d.a:
    com.newbee.ble_lib.receiver.BleStatuBroadcastReceiver bleStatuBroadcastReceiver -> a
    android.content.Context context -> b
    com.newbee.ble_lib.receiver.BleStatuBroadcastReceiverDao bleStatuBroadcastReceiverDao -> c
    void close() -> a
    void init(android.content.Context) -> a
    com.newbee.ble_lib.receiver.BleStatuBroadcastReceiverDao getInstance() -> b
com.newbee.ble_lib.service.BluetoothGattService -> com.newbee.ble_lib.service.BluetoothGattService:
    android.os.Handler handler -> e
    void close() -> a
    void start(android.content.Intent,int,int) -> a
    void init() -> b
    com.nrmyw.ble_event_lib.send.BleEventObserver getEventImp() -> c
com.newbee.ble_lib.service.BluetoothGattService$1 -> com.newbee.ble_lib.service.BluetoothGattService$a:
    com.newbee.ble_lib.service.BluetoothGattService this$0 -> a
com.newbee.ble_lib.service.BluetoothGattService$2 -> com.newbee.ble_lib.service.BluetoothGattService$b:
    int[] $SwitchMap$com$newbee$ble_lib$service$BluetoothGattServiceMsgType -> a
com.newbee.ble_lib.service.BluetoothGattServiceDao -> e.a:
    com.newbee.ble_lib.base.BaseService$StatuListen statuListen -> f
    java.lang.Class getSsCls() -> b
    com.newbee.ble_lib.base.BaseService$StatuListen getStatuListen() -> c
com.newbee.ble_lib.service.BluetoothGattServiceDao$1 -> e.a$a:
    com.newbee.ble_lib.service.BluetoothGattServiceDao this$0 -> a
    void isStart() -> a
com.newbee.ble_lib.service.BluetoothGattServiceMsgType -> com.newbee.ble_lib.service.BluetoothGattServiceMsgType:
    com.newbee.ble_lib.service.BluetoothGattServiceMsgType NONE -> b
    com.newbee.ble_lib.service.BluetoothGattServiceMsgType INIT_BLE -> c
    com.newbee.ble_lib.service.BluetoothGattServiceMsgType SCAN_BLE -> d
    com.newbee.ble_lib.service.BluetoothGattServiceMsgType DISCONNECT_BLE -> e
    com.newbee.ble_lib.service.BluetoothGattServiceMsgType SEND_CMD -> f
    com.newbee.ble_lib.service.BluetoothGattServiceMsgType SEND_IMAGE -> g
    com.newbee.ble_lib.service.BluetoothGattServiceMsgType SEND_CMD_BY_IMAGE_INDEX -> h
    int strId -> a
    com.newbee.ble_lib.service.BluetoothGattServiceMsgType[] $VALUES -> i
    int getStrId() -> a
com.newbee.ble_lib.util.AbImageUtil -> f.a:
    byte[] bitmap2Bytes(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,boolean,int) -> a
    android.graphics.Bitmap scaleImg(android.graphics.Bitmap,float) -> a
com.newbee.ble_lib.util.BleByteUtil -> f.b:
    java.lang.String getCmdStrK(byte[]) -> a
    java.lang.String parseByte2HexStr(byte[]) -> b
com.newbee.ble_lib.util.BleCheckUtil -> f.c:
    boolean checkPhoneCanUseBle(android.content.pm.PackageManager) -> a
com.newbee.ble_lib.util.BleConnectStatuUtil -> f.d:
    com.newbee.ble_lib.util.BleConnectStatuUtil util -> d
    com.nrmyw.ble_event_lib.bean.BleDeviceBean nowUseBleDevice -> a
    long lastConnectTime -> c
    boolean isConnect -> b
    com.newbee.ble_lib.util.BleConnectStatuUtil getInstance() -> a
    void sendConnectErrMsg(java.lang.String) -> a
    void sendConnecting(android.content.Context,com.nrmyw.ble_event_lib.bean.BleDeviceBean,java.lang.String) -> a
    com.nrmyw.ble_event_lib.bean.BleDeviceBean getNowUseBleDevice() -> b
    void setConnectErr(java.lang.String) -> b
    boolean isConnect() -> c
    void sendConnected() -> d
    void sendDisconnected() -> e
com.newbee.ble_lib.util.BleSendImageUtil -> f.e:
    android.graphics.Bitmap autoScaleBitmap(android.graphics.Bitmap) -> a
    byte[] bitmap2Bytes(android.graphics.Bitmap,com.nrmyw.ble_event_lib.type.BleSendBitmapQualityType) -> a
